name: Pull Request

on:
  pull_request:
    branches: ["master"]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      SONAR_PROJECT_KEY: SwissLife-OSS_Squadron
      SONAR_NAME: squadron
      SONAR_HOST_URL: https://sonarcloud.io
      SONAR_ORG: swisslife
      PR_NUMBER: ${{ github.event.pull_request.number }}
      PR_SOURCE_BRANCH: ${{ github.head_ref }}
      PR_TARGET_BRANCH: ${{ github.base_ref }}
      GITHUB_REPOSITORY: ${{ github.repository }}
      # Add specific exclusions here if needed. It should start with a comma. e.g. ",**/MySpecialFile.cs"
      EXTENDED_SONAR_EXCLUSIONS: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install GNU Parallel
        run: sudo apt-get install -y parallel

      - name: Setup Java 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"

      - name: Setup .NET SDK 6
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.x.x"

      - name: Use .NET SDK from global.json
        uses: actions/setup-dotnet@v1

      - name: Restore tools
        run: dotnet tool restore

      - name: SonarScanner Begin
        run: |
          dotnet sonarscanner begin /k:"${{ env.SONAR_PROJECT_KEY }}" /n:"${{ env.SONAR_NAME }}" \
          /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ env.SONAR_HOST_URL }}" /o:"${{ env.SONAR_ORG }}" \
          /d:sonar.cs.opencover.reportsPaths="**/*.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/*.trx" \
          /d:sonar.pullrequest.key="${{ env.PR_NUMBER }}" /d:sonar.pullrequest.branch="${{ env.PR_SOURCE_BRANCH }}" \
          /d:sonar.pullrequest.base="${{ env.PR_TARGET_BRANCH }}" /d:sonar.pullrequest.provider="github" \
          /d:sonar.pullrequest.github.repository="${{ env.GITHUB_REPOSITORY }}" \
          /d:sonar.exclusions="${{ vars.SONAR_EXCLUSIONS }}${{ env.EXTENDED_SONAR_EXCLUSIONS }}"

      - name: Build project
        run: find . -name '*.sln' -exec dotnet build {} --configuration Debug \;

      - name: Run tests
        run: |
          find . -name '*.Tests.csproj' | parallel --jobs 0 'dotnet test {} \
            -exec dotnet test {} \
            --configuration Debug \
            --no-restore \
            --no-build \
            --blame \
            -p:"CollectCoverage=true" \
            -p:"Exclude=[xunit.*]*" \
            -p:"CoverletOutputFormat=opencover" \;

      - name: SonarScanner End
        run: dotnet sonarscanner end /d:sonar.login="{{ secrets.SONAR_TOKEN }}"
